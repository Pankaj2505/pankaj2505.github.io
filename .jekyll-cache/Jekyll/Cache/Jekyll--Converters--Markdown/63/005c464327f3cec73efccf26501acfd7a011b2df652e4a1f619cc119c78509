I"ÛŽ<p><a href="https://jakevdp.github.io/PythonDataScienceHandbook/">Taken reference from </a>
<br />
<a href="\img\posts\numpy\cheetSheet.pdf" download="">Download CheetSheet</a></p>

<h2 id="data-type">Data Type</h2>

<ol>
  <li>python data type are objects</li>
  <li>these objects holds below information</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">struct</span> <span class="n">_longobject</span> <span class="p">{</span>
    <span class="nb">long</span> <span class="n">ob_refcnt</span><span class="p">;</span>
    <span class="n">PyTypeObject</span> <span class="o">*</span><span class="n">ob_type</span><span class="p">;</span>
    <span class="n">size_t</span> <span class="n">ob_size</span><span class="p">;</span>
    <span class="nb">long</span> <span class="n">ob_digit</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
<span class="p">};</span>
</code></pre></div></div>

<h2 id="numpy-array-attributes">Numpy Array Attributes</h2>
<blockquote>
  <p>Determining the size, shape, memory consumption, and data types of arrays</p>
</blockquote>

<h3 id="define-array">Define array</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">seed</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="n">x1</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">10</span> <span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">6</span><span class="p">)</span> <span class="c1"># one Dimensional array
</span><span class="n">x2</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span> <span class="c1"># two dimensional array
</span><span class="n">x3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">24</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span> <span class="c1"># three dimensional array
</span>
<span class="n">x4</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">]</span> <span class="c1"># this is a list
</span><span class="n">x5</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span><span class="s">'b'</span><span class="p">,</span><span class="s">'c'</span><span class="p">])</span> <span class="c1"># array with other data type
</span><span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">x3</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">x4</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[5 0 3 3 7 9]
------------------------------


[[ 3  5  2  4]
 [ 7  6  8  8]
 [10  1  6  7]]
------------------------------


[[[23 14]
  [17  5]
  [13  8]
  [ 9 20]]

 [[19 16]
  [19  5]
  [15 15]
  [ 0 18]]

 [[ 3 17]
  [19 19]
  [19 14]
  [ 7  0]]]
------------------------------


['a', 'b', 'c']
</code></pre></div></div>

<p><strong>Note</strong></p>
<ol>
  <li>Each array has attributes
    <ul>
      <li>ndim (the number of dimensions),</li>
      <li>shape (the size of each dimension),</li>
      <li>size (the total size of the array),</li>
      <li>dtype (datatype of the array),</li>
      <li>itemsize(size of each item of an array),</li>
      <li>nbytes(size of an array in bytes).</li>
    </ul>
  </li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'x3 dimension'</span><span class="p">,</span> <span class="n">x3</span><span class="p">.</span><span class="n">ndim</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'x3 shape'</span><span class="p">,</span> <span class="n">x3</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'x3 size'</span><span class="p">,</span> <span class="n">x3</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'x3 datatype'</span><span class="p">,</span> <span class="n">x3</span><span class="p">.</span><span class="n">dtype</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'size of each element of array x3 in bytes'</span><span class="p">,</span> <span class="n">x3</span><span class="p">.</span><span class="n">itemsize</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'size of complete array x3 in bytes'</span><span class="p">,</span> <span class="n">x3</span><span class="p">.</span><span class="n">nbytes</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>x3 dimension 3
x3 shape (3, 4, 2)
x3 size 24
x3 datatype int32
size of each element of array x3 in bytes 4
size of complete array x3 in bytes 96
</code></pre></div></div>

<h3 id="array-indexing--accessing-element-of-an-array">Array Indexing : Accessing element of an array</h3>

<ol>
  <li>indexing from begin start with 0</li>
  <li>indexing from last we can use negative indices</li>
  <li>In a multi-dimensional array, items can be accessed using a comma-separated tuple of indices:</li>
  <li>numpy array are mutable</li>
  <li>list can take many data type but numpy array has fixed datatype</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># index from begin
</span><span class="k">print</span><span class="p">(</span><span class="s">"first item of x1 : "</span><span class="p">,</span><span class="n">x1</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="c1"># now i dont know the length of the array and i want to access last item
</span><span class="k">print</span><span class="p">(</span><span class="s">"last item of x1 : "</span><span class="p">,</span><span class="n">x1</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>

<span class="c1"># how to access multidimensional array
</span><span class="k">print</span><span class="p">(</span><span class="s">"1st row and 2nd column of x2 : "</span><span class="p">,</span> <span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># row and column couting starts with 0
</span>
<span class="c1"># updating array value
</span><span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">15</span>
<span class="k">print</span><span class="p">(</span><span class="s">"1st row and 2nd column of x2 : "</span><span class="p">,</span> <span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span>

<span class="c1"># numpy array will truncate decimal values, to retain the initial type
</span><span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mf">25.523</span>
<span class="k">print</span><span class="p">(</span><span class="s">"1st row and 2nd column of x2 : "</span><span class="p">,</span> <span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span>

<span class="c1">## or throw an error if try to insert other datatype
</span>
<span class="k">print</span><span class="p">(</span><span class="s">"this will thrw ValueError: invalid literal for int() with base 10: 'panakj'"</span><span class="p">)</span> <span class="c1"># x2[0,1] = 'panakj'
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>first item of x1 :  5
last item of x1 :  9
1st row and 2nd column of x2 :  25
1st row and 2nd column of x2 :  15
1st row and 2nd column of x2 :  25
this will thrw ValueError: invalid literal for int() with base 10: 'panakj'
</code></pre></div></div>

<h3 id="array-slicing--accessing-subarray">Array Slicing : accessing subarray</h3>

<p>1 Access sub array using slice notation x[start:stop:step]</p>

<ul>
  <li>default to the values start=0, stop=size of dimension, step=1</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Access 1-d array
</span><span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">[:])</span>
<span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">[::])</span>


<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">[::</span><span class="mi">2</span><span class="p">])</span> <span class="c1">#print every second item
</span><span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># reverse the array defaults for start and stop are swapped.
</span><span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">[::</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># reverse the array and skipp 1 item
</span>

<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>


<span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">])</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[5 0 3 3 7 9]
[5 0 3 3 7 9]
[5 0 3 3 7 9]
------------------------------


[5 3 7]
[9 7 3 3 0 5]
[9 3 0]
------------------------------


[3 3]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># access 2-D array
</span><span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[:</span> <span class="p">,:])</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[::,</span> <span class="p">::])</span>


<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span> <span class="p">,</span><span class="mi">2</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[::</span><span class="mi">2</span><span class="p">,</span> <span class="p">::</span><span class="mi">2</span><span class="p">])</span>


<span class="k">print</span><span class="p">(</span><span class="s">'-'</span><span class="o">*</span><span class="mi">30</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">3</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">::</span><span class="mi">1</span><span class="p">]</span> <span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[ 3  5  2  4]
 [ 7  6  8  8]
 [10  1  6  7]]
[[ 3  5  2  4]
 [ 7  6  8  8]
 [10  1  6  7]]
[[ 3  5  2  4]
 [ 7  6  8  8]
 [10  1  6  7]]
------------------------------


6
[[8]
 [6]]
[[ 3  2]
 [10  6]]
------------------------------


[[10  1  6  7]
 [ 7  6  8  8]
 [ 3  5  2  4]]

[[ 7  6  1 10]
 [ 8  8  6  7]
 [ 4  2  5  3]]
</code></pre></div></div>

<h3 id="array-copy">Array Copy</h3>
<ol>
  <li>array slices is that they return views rather than copies of the array data.</li>
  <li>This is one area in which NumPy array slicing differs from Python list slicing: in lists, slices will be copies.</li>
  <li>as numpy slice is a view any change in view cause actual array to modify.</li>
  <li>To create copy of an array use np.copy()</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># array slice are views
</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n\n</span><span class="s">'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">],</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n\n</span><span class="s">'</span><span class="p">)</span>

<span class="n">x2_slice</span> <span class="o">=</span> <span class="n">x2</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2_slice</span> <span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n\n</span><span class="s">'</span><span class="p">)</span>

<span class="n">x2_slice</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">100</span>

<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n\n</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[ 3  5  2  4]
 [ 7  6  8  8]
 [10  1  6  7]]

[[5 2]
 [6 8]]

[[5 2]
 [6 8]]

[[  3   5   2   4]
 [  7   6 100   8]
 [ 10   1   6   7]]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># array copy is created by copy() method
</span><span class="n">x2_copy</span> <span class="o">=</span> <span class="n">x2</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">x2_copy</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span> <span class="mi">500</span>


<span class="k">print</span><span class="p">(</span><span class="n">x2</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n\n</span><span class="s">'</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x2_copy</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n\n</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[  3   5   2   4]
 [  7   6 100   8]
 [ 10   1   6   7]]

[[500   5   2   4]
 [  7   6 100   8]
 [ 10   1   6   7]]
</code></pre></div></div>

<h3 id="reshaping-of-array">Reshaping of array</h3>
<ol>
  <li>use reshape() method</li>
  <li>reshape method will use a no-copy view of the initial array, but with non-contiguous memory buffers</li>
  <li>used in transposing , row to column and vice-versa</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># reshape
</span>
<span class="n">x5</span><span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x5</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>


<span class="n">x5</span> <span class="o">=</span> <span class="n">x5</span><span class="p">.</span><span class="n">reshape</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">x5</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>



<span class="c1"># Change Row vector to column vector
</span><span class="n">x5</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">x5</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>

<span class="n">x5</span><span class="o">=</span><span class="n">x5</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'change row vector to column'</span><span class="p">,</span> <span class="n">x5</span> <span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>


<span class="n">x5</span><span class="o">=</span><span class="n">x5</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">'change column vector to row'</span><span class="p">,</span> <span class="n">x5</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>

<span class="n">x5</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>

<span class="n">x5</span><span class="o">=</span><span class="n">x5</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">newaxis</span><span class="p">,:]</span>
<span class="k">print</span><span class="p">(</span><span class="s">'change row vector to column'</span><span class="p">,</span> <span class="n">x5</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>


<span class="n">x5</span><span class="o">=</span><span class="n">x5</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">newaxis</span><span class="p">,:]</span>
<span class="k">print</span><span class="p">(</span><span class="s">'change column vector to row'</span><span class="p">,</span> <span class="n">x5</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[ 0  1  2  3  4  5  6  7  8  9 10 11]

[[ 0  1  2]
 [ 3  4  5]
 [ 6  7  8]
 [ 9 10 11]]

[0 1 2 3 4]

change row vector to column [[0 1 2 3 4]]

change column vector to row [[0]
 [1]
 [2]
 [3]
 [4]]

change row vector to column [[0 1 2 3 4]]

change column vector to row [[[0 1 2 3 4]]]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">### Array Concatanation and splitting
</span><span class="mf">1.</span> <span class="n">accomplished</span> <span class="n">using</span> <span class="n">the</span> <span class="n">routines</span> <span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">,</span> <span class="ow">and</span> <span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">.</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">z</span> <span class="o">=</span> <span class="p">[</span><span class="mi">99</span><span class="p">,</span> <span class="mi">99</span><span class="p">,</span> <span class="mi">99</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">]))</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[ 1  2  3  3  2  1 99 99 99]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span>
                 <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">grid</span> <span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">grid</span><span class="p">,</span> <span class="n">grid</span><span class="p">]),</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">grid</span><span class="p">,</span> <span class="n">grid</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span> <span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="o">*</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[1 2 3]
 [4 5 6]]

[[1 2 3]
 [4 5 6]
 [1 2 3]
 [4 5 6]]

[[1 2 3 1 2 3]
 [4 5 6 4 5 6]]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
<span class="n">grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">9</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">],</span>
                 <span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">]])</span>

<span class="c1"># vertically stack the arrays
</span><span class="n">np</span><span class="p">.</span><span class="n">vstack</span><span class="p">([</span><span class="n">x</span><span class="p">,</span> <span class="n">grid</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[1, 2, 3],
       [9, 8, 7],
       [6, 5, 4]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># horizontally stack the arrays
</span><span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">99</span><span class="p">],</span>
              <span class="p">[</span><span class="mi">99</span><span class="p">]])</span>
<span class="n">np</span><span class="p">.</span><span class="n">hstack</span><span class="p">([</span><span class="n">grid</span><span class="p">,</span> <span class="n">y</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 9,  8,  7, 99],
       [ 6,  5,  4, 99]])
</code></pre></div></div>

<h3 id="splitting-of-array">Splitting of array</h3>
<ol>
  <li>implemented by the functions np.split, np.hsplit, and np.vsplit
 2.np.dsplit will split arrays along the third axis.</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">99</span><span class="p">,</span> <span class="mi">99</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">x3</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">x1</span><span class="p">,</span> <span class="n">x2</span><span class="p">,</span> <span class="n">x3</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1 2 3] [99 99] [3 2 1]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">grid</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span><span class="n">reshape</span><span class="p">((</span><span class="mi">4</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<span class="n">grid</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">upper</span><span class="p">,</span> <span class="n">lower</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">vsplit</span><span class="p">(</span><span class="n">grid</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">upper</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">lower</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[0 1 2 3]
 [4 5 6 7]]
[[ 8  9 10 11]
 [12 13 14 15]]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">left</span><span class="p">,</span> <span class="n">right</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">hsplit</span><span class="p">(</span><span class="n">grid</span><span class="p">,</span> <span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">left</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">right</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[ 0  1]
 [ 4  5]
 [ 8  9]
 [12 13]]
[[ 2  3]
 [ 6  7]
 [10 11]
 [14 15]]
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET